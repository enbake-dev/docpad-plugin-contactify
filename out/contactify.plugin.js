// Generated by CoffeeScript 1.6.3
var nodemailer,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

nodemailer = require('nodemailer');

module.exports = function(BasePlugin) {
  var ContactifyPlugin, _ref;
  return ContactifyPlugin = (function(_super) {
    var config, smtp;

    __extends(ContactifyPlugin, _super);

    function ContactifyPlugin() {
      _ref = ContactifyPlugin.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    ContactifyPlugin.prototype.name = 'contactify';


    ContactifyPlugin.prototype.serverExtend = function(opts) {
      docpad = this.docpad;
      config = docpad.config.plugins.contactify;
      console.log(config)
      smtp = nodemailer.createTransport('SMTP', config.transport);
      var server;
      server = opts.server;
      server.post(config.path, function(req, res) {
        var enquiry, mailOptions, receivers;
        receivers = [];
        enquiry = req.body;
        receivers.push(enquiry.email, config.to);
        mailOptions = {
          to: receivers.join(","),
          from: config.from || enquiry.email,
          subject: 'Enquiry from ' + enquiry.name + ' <' + enquiry.email + '>'+enquiry.subject, 
          text: enquiry.message,
          html: '<p>' + enquiry.message + '</p>'
        };
        smtp.sendMail(mailOptions, function(err, resp) {
          if (err) {
            console.log("here in error")
            console.log(err)
            return console.log(err);
          } else {
            return console.log("Message sent: " + resp.message);
          }
        });
        return res.redirect(enquiry.redirect || config.redirect);
      });
      return this;
    };

    return ContactifyPlugin;

  })(BasePlugin);
};
